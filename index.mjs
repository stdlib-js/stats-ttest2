// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-cdf@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-quantile@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-mean@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-variance@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-ninf@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";var x=c.isPrimitive,y=f,E=v.isPrimitive,T=j,V=u,q=m;var O=function(e,t){return y(t)?V(t,"alpha")&&(e.alpha=t.alpha,!x(e.alpha)||T(e.alpha))?new TypeError(q("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha)):V(t,"alternative")&&(e.alternative=t.alternative,!E(e.alternative))?new TypeError(q("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative)):V(t,"difference")&&(e.difference=t.difference,!x(e.difference)||T(e.difference))?new TypeError(q("invalid option. `%s` option must be a number. Option: `%s`.","difference",e.difference)):V(t,"variance")&&(e.variance=t.variance,!E(e.variance))?new TypeError(q("invalid option. `%s` option must be a string. Option: `%s`.","variance",e.variance)):null:new TypeError(q("invalid argument. Options argument must be an object. Value: `%s`.",t))},k=b,F=f,P=g.isPrimitive,I=u,R=w,A=m;var D=function(e){var t,i,s;if(i=4,t=!0,arguments.length>0){if(!F(e))throw new TypeError(A("invalid argument. First argument must be an options object. Value: `%s`.",e));if(I(e,"digits")){if(!k(e.digits))throw new TypeError(A("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));i=e.digits}if(I(e,"decision")){if(!P(e.decision))throw new TypeError(A("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));t=e.decision}}switch(s="",s+=this.method,s+="\n\n",s+="Alternative hypothesis: ",s+="True difference in means is ",this.alternative){case"two-sided":default:s+="not equal to ";break;case"less":s+="less than ";break;case"greater":s+="greater than "}return s+=this.nullValue,s+="\n\n",s+="    pValue: "+R(this.pValue,-i)+"\n",s+="    statistic: "+R(this.statistic,-i)+"\n",s+="    df: "+R(this.df,-i)+"\n",s+="    "+100*(1-this.alpha)+"% confidence interval: ["+R(this.ci[0],-i)+","+R(this.ci[1],-i)+"]",s+="\n\n",t&&(s+="Test Decision: ",this.rejected?s+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":s+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",s+="\n"),s},S=e.primitives,W=t,z=i,B=s,C=n,G=r,H=a,J=o,K=d,L=l,M=m,N=p,Q=h,U=O,X=D;var Y=function(e,t,i){var s,n,r,a,o,d,l,m,p,h,c,f,v,j,u,b,g,w,x,y,E;if(!W(e)&&!S(e))throw new TypeError(M("invalid argument. First argument `x` must be a numeric array. Value: `%s`.",e));if(!W(t)&&!S(t))throw new TypeError(M("invalid argument. Second argument `y` must be a numeric array. Value: `%s`.",t));if(m={},i&&(b=U(m,i)))throw b;if(l=m.difference||0,(n=void 0===m.alpha?.05:m.alpha)<0||n>1)throw new RangeError(M("invalid argument. Option `alpha` must be a number in the range 0 to 1. Value: `%f`.",n));if(w=e.length,x=t.length,h=L(w,1,e,1),c=L(x,1,t,1),"equal"===(o=m.variance||"unequal"))E=(w-1)*h+(x-1)*c,s=G((E/=y=w+x-2)*(1/w+1/x));else{if("unequal"!==o)throw new Error(M("Invalid option. `variance` must be either `equal` or `unequal`. Value: `%s`.",o));v=G(h/w),j=G(c/x),s=G(v*v+j*j),E=J(v,4)/(w-1),E+=J(j,4)/(x-1),y=J(s,4)/E}switch(f=((r=K(w,e,1))-(a=K(x,t,1))-l)/s,u=m.alternative||"two-sided"){case"two-sided":p=2*B(-H(f),y),(d=[f-C(1-n/2,y),f+C(1-n/2,y)])[0]=l+d[0]*s,d[1]=l+d[1]*s;break;case"greater":p=1-B(f,y),(d=[f-C(1-n,y),Q])[0]=l+d[0]*s;break;case"less":p=B(f,y),(d=[N,f+C(1-n,y)])[1]=l+d[1]*s;break;default:throw new Error(M("Invalid option. `alternative` must be either `two-sided`, `less`, or `greater`. Value: `%s`.",u))}return z(g={},"rejected",p<=n),z(g,"alpha",n),z(g,"pValue",p),z(g,"statistic",f),z(g,"ci",d),z(g,"alternative",u),z(g,"df",y),z(g,"method","equal"===o?"Two-sample t-test":"Welch two-sample t-test"),z(g,"nullValue",l),z(g,"xmean",r),z(g,"ymean",a),z(g,"print",X),g};export{Y as default};
//# sourceMappingURL=index.mjs.map
