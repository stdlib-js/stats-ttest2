// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{primitives as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-cdf@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-quantile@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-mean@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-variance@v0.1.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-ninf@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.1.1-esm/index.mjs";import{isPrimitive as v}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{isPrimitive as f}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import{isPrimitive as g}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.1.0-esm/index.mjs";function x(e){var t,i,s;if(i=4,t=!0,arguments.length>0){if(!c(e))throw new TypeError(m("invalid argument. First argument must be an object. Value: `%s`.",e));if(u(e,"digits")){if(!b(e.digits))throw new TypeError(m("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));i=e.digits}if(u(e,"decision")){if(!g(e.decision))throw new TypeError(m("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));t=e.decision}}switch(s="",s+=this.method,s+="\n\n",s+="Alternative hypothesis: ",s+="True difference in means is ",this.alternative){case"less":s+="less than ";break;case"greater":s+="greater than ";break;default:s+="not equal to "}return s+=this.nullValue,s+="\n\n",s+="    pValue: "+w(this.pValue,-i)+"\n",s+="    statistic: "+w(this.statistic,-i)+"\n",s+="    df: "+w(this.df,-i)+"\n",s+="    "+100*(1-this.alpha)+"% confidence interval: ["+w(this.ci[0],-i)+","+w(this.ci[1],-i)+"]",s+="\n\n",t&&(s+="Test Decision: ",this.rejected?s+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":s+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",s+="\n"),s}function y(b,g,w){var y,E,T,O,q,V,k,F,P,R,A,D,S,W,z,B,C,G,H,I,J;if(!t(b)&&!e(b))throw new TypeError(m("invalid argument. First argument must be a numeric array. Value: `%s`.",b));if(!t(g)&&!e(g))throw new TypeError(m("invalid argument. Second argument must be a numeric array. Value: `%s`.",g));if(F={},w&&(B=function(e,t){return c(t)?u(t,"alpha")&&(e.alpha=t.alpha,!v(e.alpha)||j(e.alpha))?new TypeError(m("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha)):u(t,"alternative")&&(e.alternative=t.alternative,!f(e.alternative))?new TypeError(m("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative)):u(t,"difference")&&(e.difference=t.difference,!v(e.difference)||j(e.difference))?new TypeError(m("invalid option. `%s` option must be a number. Option: `%s`.","difference",e.difference)):u(t,"variance")&&(e.variance=t.variance,!f(e.variance))?new TypeError(m("invalid option. `%s` option must be a string. Option: `%s`.","variance",e.variance)):null:new TypeError(m("invalid argument. Options argument must be an object. Value: `%s`.",t))}(F,w),B))throw B;if(k=F.difference||0,(E=void 0===F.alpha?.05:F.alpha)<0||E>1)throw new RangeError(m("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",E));if(G=b.length,H=g.length,R=d(G,1,b,1),A=d(H,1,g,1),"equal"===(q=F.variance||"unequal"))J=(G-1)*R+(H-1)*A,y=r((J/=I=G+H-2)*(1/G+1/H));else{if("unequal"!==q)throw new Error(m('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"variance",["equal","unequal"].join('", "'),q));S=r(R/G),W=r(A/H),y=r(S*S+W*W),J=o(S,4)/(G-1),J+=o(W,4)/(H-1),I=o(y,4)/J}switch(D=((T=l(G,b,1))-(O=l(H,g,1))-k)/y,z=F.alternative||"two-sided"){case"two-sided":P=2*s(-a(D),I),(V=[D-n(1-E/2,I),D+n(1-E/2,I)])[0]=k+V[0]*y,V[1]=k+V[1]*y;break;case"greater":P=1-s(D,I),(V=[D-n(1-E,I),h])[0]=k+V[0]*y;break;case"less":P=s(D,I),(V=[p,D+n(1-E,I)])[1]=k+V[1]*y;break;default:throw new Error(m('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"alternative",["two-sided","less","greater"].join('", "'),z))}return i(C={},"rejected",P<=E),i(C,"alpha",E),i(C,"pValue",P),i(C,"statistic",D),i(C,"ci",V),i(C,"alternative",z),i(C,"df",I),i(C,"method","equal"===q?"Two-sample t-test":"Welch two-sample t-test"),i(C,"nullValue",k),i(C,"xmean",T),i(C,"ymean",O),i(C,"print",x),C}export{y as default};
//# sourceMappingURL=index.mjs.map
